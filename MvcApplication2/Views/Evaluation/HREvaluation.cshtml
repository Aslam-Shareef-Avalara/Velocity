@model MvcApplication2.ViewModel.EvaluationViewModel
@{

    //Layout = "~/Views/Shared/_2Col_Layout.cshtml";
}
@functions{
    public string translateRating(int rating)
    {
        string translatedRating = "";
        switch (rating)
        {
            case 1: translatedRating = "Not a fit";
                break;
            case 2: translatedRating = "Underachieving";
                break;
            case 3: translatedRating = "Orange";
                break;
            case 4: translatedRating = "G'in the JD";
                break;
            case 5: translatedRating = "Crushed It!";
                break;
            default: translatedRating = "Unrated";
                break;
        }
        return translatedRating;
    }
    public DataService.EmployeeEvaluation GetValidEmployeeEvalObj(Guid gid)
    {
        var g = Model.SelfEvaluations.Where(x => x.GoalId == gid).FirstOrDefault();
        if (g == null)
        {
            return new DataService.EmployeeEvaluation();
        }
        else
        {
            return g;
        }
    }
    public DataService.ManagerEvaluation GetManagerEvalObj(Guid gid)
    {
        var g = Model.ManagerEvaluations.Where(x => x.GoalId == gid).FirstOrDefault();
        if (g == null)
        {
            return new DataService.ManagerEvaluation();
        }
        else
        {
            return g;
        }

    }

}
<script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
<link href="~/Content/style.css" rel="stylesheet" />
<script src="~/Scripts/jquery.mousewheel.js"></script>
<script src="~/Scripts/jquery.easing.1.3.js"></script>
@*<script src="~/Scripts/jquery.vaccordion.js"></script>*@
<link href="@Url.Content("~/content/jquery.jscrollpane.css")" rel="stylesheet" />
<link href="@Url.Content("~/content/jquery.jscrollpane.lozenge.css")" rel="stylesheet" />
<script type="text/javascript" src="@Url.Content("~/scripts/jquery.jscrollpane.min.js")"></script>
<script src="~/Scripts/jQuery.ExDent.js"></script>
<link href="~/Content/jquery.rateyo.css" rel="stylesheet" />
<script src="~/Scripts/jquery.rateyo.min.js"></script>
<div style="top:0px; width:100%; height:auto;" id="fixedheader" class="hreval">
    @if (Model.EmployeeDetails != null && !string.IsNullOrEmpty(Model.EmployeeDetails.FirstName))
    {
        <h2>@Model.EmployeeDetails.FirstName's Review<span class="pull-right" onclick="closereview();"></span></h2>
    }
    <p>Click each goal title to view it. You can use the navigation keys (onscreen up and down arrows) to move to other goals or scroll with your mouse-wheel.</p>
    <div class="pull-left" style="width: 100%;">
        @if (Model.IsEditable)
        {

            <button id="publishbutton" class="btn btn-lg btn-success" onclick="return publishreview('@Model.EmployeeDetails.gid')" style="margin-bottom:10px;"><span class="fi-flag" style="font-size:15px;padding-right:5px;">&nbsp;</span><span id="publishtext">Approve - Send To Manager</span></button>
            <input id="rejectbutton" type="button" class="btn btn-lg btn-danger" data-toggle="modal" data-target="#reject_popup" style="margin-bottom:10px;" value="Reject" />

        }
        @if (ViewBag.ShowSelfRating == null || ViewBag.ShowSelfRating == true)
        {
            <div class="pull-right" id="selfevalrating" style="margin-left:10px;margin-right: 25px;">
                <span style="padding-left:2px;">Self Overall Rating:</span>
                <span id="selfoverallrating_value" class="btn-info">@translateRating((int)Math.Round(Model.Rating.SelfOverallRating.HasValue ? Model.Rating.SelfOverallRating.Value : 0))</span>


            </div>
        }
        <div class="pull-right" id="evalrating" style="margin-left:0px;margin-right: 0px;">
            <span style="padding-left:2px;">Overall rating:</span>
            <span id="manageroverallrating_value" class="btn-info">@translateRating((int)Math.Round(Model.Rating.ManagerOverllRating.HasValue ? Model.Rating.ManagerOverllRating.Value : 0))</span>
        </div>


    </div>
</div>

<div id="hrevalgoalscontainer" class="row">
    <div class="large-12 end">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#GoalsAndEvaluations">Goals/Evaluations</a></li>
            <li><a data-toggle="tab" href="#managercomment">Overall Evaluation Comment</a></li>
            <li><a data-toggle="tab" href="#summary">Meeting Summary</a></li>
            <li><a data-toggle="tab" href="#training">Training Needs</a></li>
            @if (ViewBag.ShowFeedback == true)
            {
                <li><a data-toggle="tab" href="#feedback">Process Feedback</a></li>
            }
        </ul>
        <div class="tab-content">
            <div id="GoalsAndEvaluations" class="tab-pane fade in active">
                <div class="va-container" style="margin-top:26px;padding-right:10px;">
                    @*<div class="va-nav">
                            <span class="va-nav-prev" style="top:10px;" title="Previous goal">Previous</span>
                            <span class="va-nav-next" style="bottom:10px;" title="Next goal">Next</span>
                        </div>*@
                    @*<div class="va-wrapper">*@
                    @foreach (DataService.Goal g in Model.Goals.OrderBy(x => x.Fixed).ThenByDescending(y => y.EmployeeId).ToList())
                    {
                        DataService.EmployeeEvaluation empEval = GetValidEmployeeEvalObj(g.gid);
                        DataService.ManagerEvaluation mgrE = GetManagerEvalObj(g.gid);
                    <!--Individual Goals Template Start -->
                        @*<div class="va-slice va-slice-color-1" id="_@g.gid">*@
                        <h3 class="va-title @(g.Fixed ? "CompetencyHeader" : "GoalHeader")">@(g.Fixed ? (g.EmployeeId.HasValue ? "Avalara's People Management Goal" : "Success Trait") : "Goal") : @g.Title @*<span class="pull-right bold">Weightage : @g.Weightage %</span>*@</h3>

                        <div class="va-content" style="margin-top:10px;">

                            <div class="col-lg-12 col-sm-12 col-xs-12">
                                <div class="well bordered-left bordered-themeprimary">

                                    <a data-toggle="tab" class="contenttitle" href="#description_@g.gid">Description</a>
                                    <div id="description_@g.gid" class="tab-pane fade in active">
                                        <div class="scroll-pane" style="display:inline-block;width:100%;overflow-y:auto;">

                                            <p>
                                                @Html.Raw(g.Goal1)

                                            </p>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12 col-xs-12">
                                <div class="well bordered-left bordered-yellow">
                                    <a data-toggle="tab" class="contenttitle" href="#selfevaluation_@g.gid">Self Evaluation</a>
                                    <div class="ratingcontainer pull-right">
                                        <div class="readonlyrating" id="rating_@g.gid">@translateRating(GetValidEmployeeEvalObj(g.gid).GoalRating.HasValue ? GetValidEmployeeEvalObj(g.gid).GoalRating.Value : 0) </div>
                                    </div>
                                    <div id="selfevaluation_@g.gid" class="selfeval tab-pane ">
                                        <div class="scroll-pane" style="display:inline-block;width:100%;overflow-y:auto;">
                                            @{ var se = GetValidEmployeeEvalObj(g.gid);
                                             var attachments = Model.Attachments.Where(x => x.EvaluationGoalId == se.Id && x.EvaluationType == DataService.EvaluationType.SELF_EVALUATION).ToList();
                                            }

                                            @if (attachments != null && attachments.Count > 0)
                                            {
                                                <div class="pull-right" style="padding-left:15px">
                                                    <span class="fi-checkbox fi-comment" style="font-size:20px;color:#374659;"></span>
                                                    <a onclick="toggleattachment(false,'@g.gid')">View Employee Comment (click)</a>
                                                </div>
                                                <div class="pull-right" style="padding-left:15px;">
                                                    <span class="fi-checkbox fi-paperclip" style="font-size:20px;color:#374659;"></span>
                                                    <a onclick="toggleattachment(true,'@g.gid')">@attachments.Count attachment(s) (click)</a>
                                                </div>
                                            }
                                            <br />
                                            <div class="q pull-left" id="employeecomment_@g.gid">
                                                <span class="quote">“</span>@Html.Raw(empEval.Comment)

                                            </div>

                                        </div>
                                        <div id="reporteeattachments_@g.gid" class="pull-left clear-fix" style="display:none;padding-top:10px;width:100%">

                                            @if (attachments != null && attachments.Count > 0)
                                            {

                                                <p style="margin-bottom:0px!important;margin-top:5px;">Attachments (click to view) :</p>

                                                foreach (DataService.Attachment attachment in attachments)
                                                {
                                                    <span class="label label-default label-form">
                                                        <a class="attachment" target="_blank" href="@Url.Content("~/")evaluation/download?fileid=@attachment.AttachmentId">@attachment.FileName</a>
                                                    </span>
                                                }
                                            }
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12 col-xs-12">
                                <div class="well bordered-left bordered-red">
                                    <a data-toggle="tab" class="contenttitle" href="#mgrevaluation_@g.gid">Manager Evaluation</a>
                                    <div class="ratingcontainer pull-right">
                                        <div class="readonlyrating" id="rating_@g.gid">@translateRating(@mgrE.GoalRating.HasValue ? @mgrE.GoalRating.Value : 0) </div>
                                    </div>
                                    <div id="mgrevaluation_@g.gid" class="mgreval tab-pane ">
                                        <div class="scroll-pane" style="display:inline-block;width:100%;overflow-y:auto;">


                                            <br />
                                            <div class="q pull-left">
                                                <span class="quote">“</span>@Html.Raw(mgrE.Comment)

                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div id="reporteeattachments" class="pull-left clear-fix" style="padding-top:10px;width:100%">
                                    @{
                        attachments = Model.Attachments.Where(x => x.EvaluationGoalId == mgrE.Id && x.EvaluationType == DataService.EvaluationType.MANAGER_EVALUATION).ToList();
                                    }
                                    @if (attachments != null && attachments.Count > 0)
                                    {

                                        <p style="margin-bottom:0px!important;margin-top:5px;">Attachments (click to view) :</p>

                                        foreach (DataService.Attachment attachment in attachments)
                                        {
                                            <span class="label label-default label-form">
                                                <a class="attachment" target="_blank" href="@Url.Content("~/")evaluation/download?fileid=@attachment.AttachmentId">@attachment.FileName</a>
                                            </span>
                                        }
                                    }
                                </div>

                            </div>













                        </div>
                        @*</div>*@
                    <!--Individual Goals Template End-->
                    }
                    @*</div>*@
                </div>
            </div>



            <div id="managercomment" class="tab-pane fade">
                @Model.Rating.OverAllReviewComment
            </div>
            <div id="summary" class="tab-pane fade">
                @Model.Conclusion.meetingsummary
            </div>
            <div id="training" class="tab-pane fade">
                @if (Model.Conclusion != null && !string.IsNullOrEmpty(Model.Conclusion.training))
                {
                    string[] s = Model.Conclusion.training.Split(new string[] { "$$$" }, StringSplitOptions.None);
                    int counter = 1;
                    foreach (string t in s)
                    {
                        <text>
                            <label style="width:100%;">@counter .  @t</label><br />
                        </text>
                        counter++;
                    }
                }

            </div>
            @if (ViewBag.ShowFeedback == true)
            {
                <div id="feedback" class="tab-pane fade">
                    <table class="table table-hover">
                        <tr>
                            <th>Question</th>
                            <th>Feedback Answer</th>
                            <th class="controls-head"></th>
                        </tr>

                        @foreach (var item in Model.FeedbackQuestions)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Question)
                                </td>
                                <td>
                                    @NormalizeAnswers(Model.Feedbackanswers.FirstOrDefault(x => x.QuestionId == item.QuestionId))
                                </td>

                            </tr>
                        }

                    </table>
                </div>
            }
        </div>
    </div>
</div>
<div id="reject_popup" class="modal fade" role="dialog">
    <div class="modal-dialog  large-5 small-5">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Enter the reason for rejection : </h4>
            </div>
            <div class="modal-body">
                <textarea id="rejectreason" name="rejectionreason" style="width:545px; height:179px;"></textarea>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-danger" value="Reject" onclick="return Reject(@Model.Goals.First(x=>!x.Fixed).Evalcycleid, '@Model.EmployeeDetails.gid')" />
                <button type="button" class="btn btn-default" id="reject_popup_close" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
@functions{
    public string NormalizeAnswers(DataService.FeedbackAnswer fbans)
    {

        if (fbans == null || string.IsNullOrEmpty(fbans.Answer) || string.IsNullOrWhiteSpace(fbans.Answer))
        {
            return "Feedback not provided";
        }
        else return fbans.Answer;
    }
}

<script>
    var selectedmenuid = "team";
    var evalchanged = [];
    var ratingchanged=[];
    var evalcycleid = @ViewBag.Evalcycleid;
    var  message = "Rejected";
</script>
<script type="text/javascript">
    var automove=false;
    var currentGoalForAttachments="";

    function Reject(currentpecycle, employeeid) {
        if($.trim($("#rejectreason").val())=="")
        {
            alert("Please enter the reason for rejection.");
            return false;
        }
        var urlToPostTo = "@Url.Content("~/Evaluation/rejectByHr")";
        $("#publishbutton").fadeOut();
        $("#rejectbutton").attr("disabled","disabled");
        $("#rejectbutton").attr("disabled","disabled");
        $.post(urlToPostTo,{"employeeid":employeeid ,"reason":$("#rejectreason").val(),"evalcycleid":currentpecycle} ,function (r) {
            message = "Rejected";
            if(r.msg=="error")
            {
                message="Error while rejecting";
                $("#publishbutton").fadeIn();
            }
            $("#rejectbutton").val(message).addClass("btn-rounded");
            setTimeout(function(){
                if(message=="Rejected")
                    $("#rejectbutton").removeClass("btn-rounded").fadeOut();
                else{
                    $("#rejectbutton").removeClass("btn-rounded").val("Reject").removeAttr("disabled");
                }

            },2000);

            $("#reject_popup").modal("hide");
            setTimeout(function(){closereview()},1500);
        });
    }


    function setGoalID(id)
    {
        currentGoalForAttachments = id;

    }
    function publishreview(empId) {
        $.post("@Url.Content("~/evaluation/PublishHrEvaluation")?employeeid="+empId+"&evalcycleid="+evalcycleid,function(r){
            if(r=="error")
            {
                $("#publishtext").html("Error while publishing.").parent().addClass("alertpublished_error");
            }
            else
            {
                $("#publishtext").parent().addClass("alertpublished").html("Published successfully!");
                $("button").attr("disabled","disabled");
                closereview();
                return;
            }

            setTimeout(function(){
                $("#publishtext").parent().removeClass("alertpublished").removeClass("alertpublished_error");//.html("Publish Self-Evaluation");
            },2000);
        });
    }

    $(document).ready(function(){

        $('.nav-tabs a').on('shown.bs.tab', function(){
            $('#hrevalgoalscontainer .scroll-pane:visible').jScrollPane({
                showArrows: true,
                horizontalGutter: 10
            });
        });

        $('blockquote, q').exdent({
            by: '.5em'
        });
        adjustHeaderWidth();
        $(window).resize(function(){
            adjustHeaderWidth();
            //     $(".maincontent").css("height",$("#hrevalgoalscontainer").height()+151);
        });
        // $(".maincontent").css("height",$("#hrevalgoalscontainer").height()+151);

        @if (ViewBag.ShowFeedback!=true) // This means we are showing to employees
        {
             <text>
        //  $(".hreval").closest(".inner-wrap").addClass("removemargin");
        </text>
         }

        window.resizeBy(1,1);
    });
    function adjustHeaderWidth()
    {


    }


    var _updatecounter=0;
    var updateCounter = function (rating) {
        _updatecounter++;
        $(this).next(".counter").text(rating);
    };

    var setCounter = function(rating)
    {

        if(_updatecounter>0)
        {
            console.log($(this).next(".counter").text() + " --- " + rating);
            var ratingcounter =  $(this).next(".counter");
            var found =false;
            for(i=0;i<ratingchanged.length;i++)
            {
                if(ratingchanged[i]==ratingcounter.data("goalid"))
                {
                    found=true;
                    break;
                }
            }
            if(!found)
                ratingchanged.push( ratingcounter.data("goalid"));
        }


        $(this).next(".counter").text(rating);
    }
    $(function () {
        var icons = {
            header: "fa fa-plus",
            activeHeader: "fa fa-minus"
        };
        $('#GoalsAndEvaluations .va-container').accordion({
            //accordionW: "100%",
            //accordionH: ((500+50*@Model.Goals.Count)+20),// 20 is for additional padding
            //expandedHeight	: 500,
            visibleSlices: @Model.Goals.Count,
            animOpacity: 1.0,
            collapsible :true,
            contentAnimSpeed: 100,
            icons: icons
        });

        $(".emplrating").rateYo({
            precision: 0,
            spacing: "10px",
            onSet: updateCounter,
            normalFill: "#ccc",
            ratedFill: "#888",
            readOnly: true,
            onChange: updateCounter,
            starWidth: "20px"
        });
        $(".mgroverallrating, .selfoverallrating").rateYo({
            maxValue: 5,
            numStars: 1,
            starWidth: "30px",
            readOnly:true,
            onSet: updateCounter,
            onChange: updateCounter,
            ratedFill: "red",
            precision:2
        });
        $(".managerrating").rateYo({
            precision: 0,
            spacing: "10px",
            onSet: setCounter,
            onChange: updateCounter
            @if (!Model.IsEditable)
        {
            <text>, readOnly: true</text>
        }
        });
        $(".goalrating").each(function(i,o){
            if($(o).data("initval")!=null && $(o).data("initval")!="")
            {
                $(o).rateYo("option", "rating", $(o).data("initval"));
            }
        });

        //$($(".va-slice")[0]).find(".va-title").click();
        //setTimeout(function(){
        //    $($(".va-slice")[0]).find(".va-title").click();
        //},500);

        setWidth() ;

        //   $(".maincontent").css("height",$("#hrevalgoalscontainer").height()+151);
    });

    function setWidth() {
        setTimeout(function(){
            adjustHeaderWidth();
            var c = $("#hrevalgoalscontainer .va-content").width();
            if(c<200)
            {
                setWidth();
                return;
            }
            //$("#hrevalgoalscontainer .scroll-pane").each(function(i,o){
            //    $(o).css("min-width",c);
            //});

            //   $("#hrevalgoalscontainer .nav-tabs,#hrevalgoalscontainer").css("max-width",c);



        },1000);
    }

    function externalEventHandler_Navigate() {
        var idoftitle="";
        $("#hrevalgoalscontainer .va-slice").each(function(i,o){
            if($(o).data("expanded"))
            {
                idoftitle = $(o).attr("id");

                return false;
            }
        });
        $("#hrevalgoalscontainer .va-slice").each(function(i,o){
            $("#"+$(o).attr("id") +" .va-title").removeClass("expandedpane");
        });
        $("#"+idoftitle +" .va-title").addClass("expandedpane");
        if(automove)// for first time only it will be false so that the user can see the full title
            setTimeout(function(){
                // window.location.href="#"+idoftitle;
            },250);

        automove=true;
        setTimeout(function(){
            if($("#hrevalgoalscontainer .scroll-pane:visible").data("eval_scrollpane")=="initialized")
                return;
            $('#hrevalgoalscontainer .scroll-pane:visible').jScrollPane({
                showArrows: true,
                horizontalGutter: 10
            });
        },350);
        try{
            $(".maincontent").css("height",$("#hrevalgoalscontainer").height()+151);
        }
        catch(x){}
    }
    function toggleattachment(showattachments, goalid) {
        if($('#employeecomment_'+goalid).data("parentheight")=="undefined")
            $('#employeecomment_'+goalid).data("parentheight", $('#employeecomment_'+goalid).closest(".scroll-pane").css("height"));
        if(showattachments)
        {
            $('#employeecomment_'+goalid).fadeOut();
            $('#employeecomment_'+goalid).closest(".scroll-pane").css("height", "60px");
            $('#reporteeattachments_'+goalid).fadeIn();
        }
        else
        {
            $('#reporteeattachments_'+goalid).fadeOut();
            $('#employeecomment_'+goalid).closest(".scroll-pane").css("height", "283px");
            $('#employeecomment_'+goalid).fadeIn();

        }


    }

</script>
<style>

    .bordered-themeprimary {
  border-color: #2dc3e8 !important;
}
     .bordered-themeprimary a{
  color: #2dc3e8 !important;
}


.well.bordered-left {
  border-left: 5px solid #2dc3e8;
}
    .bordered-yellow {
 border-color: #ffce55  !important;
}
.bordered-yellow a{
 color: #ffce55  !important;
}

.bordered-red {
 border-color: #df5138  !important;
}
    .bordered-red a{
 color: #df5138  !important;
}

.well {
  -webkit-border-radius: 2px;
  -webkit-background-clip: padding-box;
  -moz-border-radius: 2px;
  -moz-background-clip: padding;
  border-radius: 2px;
  background-clip: padding-box;
  -webkit-box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
  background-color: #fbfbfb;
  border: 0;
  color: #262626;
  position: relative;
  margin-bottom: 30px;
  min-height: 0px;
    display:block;
  /*#region Bordered Well*/
  /*#endregion Bordered Well*/
  /*#region Colored Well*/
  /*#endregion Bordered Well*/
}

     .va-title.expandedpane {
    background-color: rgb(55, 70, 89) !important;
    color: white !important;
}
        #fixedheader h2 span {
            background-image:url(@Url.Content("~/images/closeButton.png"));

            color:gray;
            font-family:Arial;
            padding-left:3px;
            cursor:pointer;
            width:32px;
            height:32px;
            vertical-align:top;
        }
        .alertpublished {
            background-color: none;
            border-color: lightblue;
            border-width: thin;
            border-style: solid;
            border-radius: 5px;
        }

        .alertpublished_error {
            border-color: red;
            background-color: none;
            border-width: thin;
            border-style: solid;
            border-radius: 5px;
        }

        .va-slice ul.nav-tabs li a {
            background-color: gray;
            color: lightgray;
        }

        .va-slice ul.nav-tabs li.active a {
            background-color: white;
            color: #555;
        }

        .tab-content {
            padding-top: 10px;
        }

        .nav-tab, .tab-content {
        }

        .alertsaved, .alertsaved_error {
            background-color: #33414E !important;
            border-color: lightblue;
        }

        .alertsaved_error {
            border-color: red;
        }

        .va-slice {
            cursor: default !important;
            border-bottom-style: double;
        }

        .va-title {
            cursor: pointer;
        }

        .label-default {
            background-color: #777;
            margin-left: 5px;
        }

            .label-default a {
                color: white;
            }

        table.table td {
            vertical-align: middle !important;
        }

            table.table td:nth-child(4) {
                text-align: right !important;
            }

        div.ratingcontainer {
            position: relative;
        }

        div.counter::before, div.counter *::before {
            border-color: transparent #DDD transparent transparent;
            border-style: solid;
            border-width: 5px 5px 5px 0;
            content: "";
            display: block;
            height: 0;
            left: -10px;
            margin-top: -5px;
            position: relative;
            top: 50%;
            width: 0;
        }


        div.counter {
            background-color: #DDD;
            color: #000;
            display: block;
            font-size: 15px;
            height: 20px;
            line-height: 0;
            margin-top: -10px;
            min-width: 20px;
            padding: 5px;
            position: absolute;
            right: -36px;
            top: 50%;
        }

        div.counter {
            float: left;
            font-weight: bold;
            margin-left: 10px;
            margin-top: 12px;
        }

        div.selfeval div.counter {
            margin-top: 7px;
        }

        .va-slice-color-1 {
            background-color: #FFF;
        }

        .va-title {
            font-size: 16px;
            font-weight: 300;
            color:gray!important;
            background-color:#eee;
            margin-left:0px!important;
            padding-left:10px;
        }

        .va-wrapper {
            background: none;
        }

        .va-slice p {
            font-size: 15px;
            color: #888;
        }

        .scroll-pane,
        .scroll-pane-arrows {
            width: 100%;
            /*height: 200px;*/
            overflow: auto;
        }

        .horizontal-only {
            height: auto;
            max-height: 200px;
        }

        .jspDrag {
            background: #8b8b9f none repeat scroll 0 0;
        }

        .jspArrowUp {
            background-position: 85px -4px !important;
        }

        .jspArrowDown {
            background-position: 0px 0px !important;
        }

        .jspArrow {
            background-image: none !important;
            border-radius: 10px;
        }

        .jspVerticalBar .jspTrack {
            width: 10px !important;
        }

        .jspVerticalBar {
            width: 11px !important;
            border-radius: 5px;
        }

        .va-nav span {
            height: 40px !important;
        }

        .quote {
            font-size: 50pt;
            line-height: 23px;
            vertical-align: middle;
            font-family:arial;
float:left;
        }

        .va-slice .q {
            color: #888;
            font-size: 15px;
        }

        .va-slice .q {
            font-family: Georgia,serif;
            font-style: italic;
            font-weight: normal;
            line-height: 1.6;
            margin-bottom: 1.25rem;
            text-rendering: optimizelegibility;
            margin-top: 30px;
            clear: left;
        }



        #overallrating, #selfoverallrating {
            margin: 0;
        position: relative;
      right: -45px;
        top: -25px;
        }
           H3 span {
        font-family: georgia;
        font-size: 14px;
        font-style: italic;
        font-weight: normal;
        margin-right: 10px;
        text-transform: none;
    }
        #evalrating {
         border-right: 1px dashed gray;
        margin-bottom: 15px;
        margin-left: 20px;
        padding-right: 25px;
        }
        #fixedheader h2 {
        font-size: 24px;
        }
        .CompetencyHeader {
            color:yellow;
        }
        html, .off-canvas-wrap {
        overflow-x:auto!important;
        }
      #selfoverallrating_value, #manageroverallrating_value.btn-info {
    /*background-color: #374659;*/
    border-radius: 5px;
    color: white;
    margin-bottom: 3px;
    padding: 5px;
    font-weight:bold;
    display:block;
    }
     .readonlyrating {

      background-color:orange;
        font-weight:600;
        text-align:center;
        color:black;
        font-size:15px;
        padding:5px;
        border-radius:5px;
    }
    #GoalsAndEvaluations .va-container h3,#GoalsAndEvaluations .va-container  .h3
    {
        margin-bottom:2px;
        border-bottom:2px solid, gray;

    padding:10px;
    }
    #GoalsAndEvaluations .va-container .va-content ul li a{
        font-size: 15px;
    font-weight:bold;
    color:#2DC3E8;
    }
     .va-content ul li {
        list-style:none;
    }
    #historicaldatacontent .navbar
    {
        display:none;
    }
    #GoalsAndEvaluations .va-container .va-content{
    margin-left:0px;
    }
    .contenttitle
    {
        font-size:16px;
    font-weight:bold;
    }
   .well{
        padding-bottom:5px;
    padding-top:5px;
    }
.well .tab-pane{
	padding-bottom:0px;
}
.va-content.ui-accordion-content.ui-helper-reset.ui-widget-content.ui-corner-bottom.ui-accordion-content-active
{
	display: inline-block !important;
    height: auto !important;
   margin-top: 0 !important;
    padding-top: 10px;
border: 1px solid lightgray;
}
</style>
